// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package db

import (
	"context"
	"fmt"

	"github.com/jackc/pgx/v5"
	"github.com/jackc/pgx/v5/pgconn"
)

type DBTX interface {
	Exec(context.Context, string, ...interface{}) (pgconn.CommandTag, error)
	Query(context.Context, string, ...interface{}) (pgx.Rows, error)
	QueryRow(context.Context, string, ...interface{}) pgx.Row
}

func New(db DBTX) *Queries {
	return &Queries{db: db}
}

type Queries struct {
	db DBTX
}

func (q *Queries) WithTx(tx pgx.Tx) *Queries {
	return &Queries{
		db: tx,
	}
}

func (q *Queries) BeginTx(ctx context.Context, opts pgx.TxOptions) (pgx.Tx, error) {
	if db, ok := q.db.(*pgx.Conn); ok {
		return db.BeginTx(ctx, opts)
	}
	return nil, fmt.Errorf("BeginTx not supported")
}

func (q *Queries) Commit(ctx context.Context) error {
	if tx, ok := q.db.(pgx.Tx); ok {
		return tx.Commit(ctx)
	}
	return fmt.Errorf("Commit not supported")
}

func (q *Queries) Rollback(ctx context.Context) error {
	if tx, ok := q.db.(pgx.Tx); ok {
		return tx.Rollback(ctx)
	}
	return fmt.Errorf("Rollback not supported")
}
